{"ast":null,"code":"import _classCallCheck from \"/Users/amymao/LocalDocs/tictactoe/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/amymao/LocalDocs/tictactoe/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/amymao/LocalDocs/tictactoe/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/amymao/LocalDocs/tictactoe/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/amymao/LocalDocs/tictactoe/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/amymao/LocalDocs/tictactoe/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nvar Square =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Square, _React$Component);\n\n  function Square() {\n    _classCallCheck(this, Square);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Square).apply(this, arguments));\n  }\n\n  _createClass(Square, [{\n    key: \"render\",\n    // constructor to initialize state\n    // in javascript classes, always call super when defining \"constructor\" of a subclass\n    // all react component classes that have a \"constructor\" sthould start it with a \"super(props)\" call.\n    // constructor(props){\n    //   super(props);\n    //   this.state = {  //Square no longer keeps track of game's state\n    //     value: null,\n    //   };\n    // React components can use state to remember things. private to defined component.\n    // store current value of Square in \"this.state\", change it when Square is clicked.\n    value: function render() {\n      var _this = this;\n\n      return (// <button className=\"square\" onClick={function() {alert('click');}}>\n        // arrow function syntax for event handlers\n        // onClick={() => alert('click')} : alert when a square is clicked\n        // <button\n        //   className=\"square\"\n        //   onClick={() => alert('click')}>\n        //   {this.props.value}\n        // </button>\n        // passes a prop from a parent Board component to a child Square component\n        // displays the current state's value when clicked.\n        // onClick={() => this.setState({value: 'X'})}>: tells react to re-render square whenever its button\n        // is clicked. after update, square's this.state.value = 'X'.\n        // ** when setState is called in a component, react automatically updates the child components inside of it too\n        // <button\n        //   className=\"square\"\n        //   onClick={() => this.setState({value: 'X'})}>\n        //   {this.state.value}\n        // </button>\n        // passing down value and onlick from Board to Square\n        React.createElement(\"button\", {\n          className: \"square\",\n          onClick: function onClick() {\n            return _this.props.onClick();\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 41\n          },\n          __self: this\n        }, this.props.value)\n      );\n    }\n  }]);\n\n  return Square;\n}(React.Component);\n\nvar Board =\n/*#__PURE__*/\nfunction (_React$Component2) {\n  _inherits(Board, _React$Component2);\n\n  // lifting state into a parent component: when components are refactored.\n  // to collect data from multiple children, or two children communicate with\n  // each other: declare shared state in parent component.\n  // parent component can pass state back down to the children via props.\n  function Board(props) {\n    var _this2;\n\n    _classCallCheck(this, Board);\n\n    _this2 = _possibleConstructorReturn(this, _getPrototypeOf(Board).call(this, props));\n    _this2.state = {\n      squares: Array(9).fill(null)\n    };\n    return _this2;\n  }\n\n  _createClass(Board, [{\n    key: \"renderSquare\",\n    value: function renderSquare(i) {\n      var _this3 = this;\n\n      // used prop to make board instruct each individual Square about its current value\n      // pass down a function from board to square to maintain board's state's privacy\n      return React.createElement(Square, {\n        value: this.state.squares[i],\n        onClick: function onClick() {\n          return _this3.handleClick(i);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var status = 'Next player: X';\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"status\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, status), React.createElement(\"div\", {\n        className: \"board-row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, this.renderSquare(0), this.renderSquare(1), this.renderSquare(2)), React.createElement(\"div\", {\n        className: \"board-row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, this.renderSquare(3), this.renderSquare(4), this.renderSquare(5)), React.createElement(\"div\", {\n        className: \"board-row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, this.renderSquare(6), this.renderSquare(7), this.renderSquare(8)));\n    }\n  }]);\n\n  return Board;\n}(React.Component);\n\nvar Game =\n/*#__PURE__*/\nfunction (_React$Component3) {\n  _inherits(Game, _React$Component3);\n\n  function Game() {\n    _classCallCheck(this, Game);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Game).apply(this, arguments));\n  }\n\n  _createClass(Game, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"game\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"game-board\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, React.createElement(Board, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"game-info\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }), React.createElement(\"ol\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return Game;\n}(React.Component); // ========================================\n\n\nReactDOM.render(React.createElement(Game, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 117\n  },\n  __self: this\n}), document.getElementById('root'));","map":{"version":3,"sources":["/Users/amymao/LocalDocs/tictactoe/src/index.js"],"names":["React","ReactDOM","Square","props","onClick","value","Component","Board","state","squares","Array","fill","i","handleClick","status","renderSquare","Game","render","document","getElementById"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nclass Square extends React.Component {\n  // constructor to initialize state\n  // in javascript classes, always call super when defining \"constructor\" of a subclass\n  // all react component classes that have a \"constructor\" sthould start it with a \"super(props)\" call.\n    // constructor(props){\n    //   super(props);\n    //   this.state = {  //Square no longer keeps track of game's state\n    //     value: null,\n    //   };\n    // React components can use state to remember things. private to defined component.\n    // store current value of Square in \"this.state\", change it when Square is clicked.\n\n  render() {\n    return (\n      // <button className=\"square\" onClick={function() {alert('click');}}>\n      // arrow function syntax for event handlers\n      // onClick={() => alert('click')} : alert when a square is clicked\n        // <button\n        //   className=\"square\"\n        //   onClick={() => alert('click')}>\n        //   {this.props.value}\n        // </button>\n        // passes a prop from a parent Board component to a child Square component\n\n      // displays the current state's value when clicked.\n      // onClick={() => this.setState({value: 'X'})}>: tells react to re-render square whenever its button\n      // is clicked. after update, square's this.state.value = 'X'.\n\n      // ** when setState is called in a component, react automatically updates the child components inside of it too\n        // <button\n        //   className=\"square\"\n        //   onClick={() => this.setState({value: 'X'})}>\n        //   {this.state.value}\n        // </button>\n\n      // passing down value and onlick from Board to Square\n      <button\n        className=\"square\"\n        onClick={() => this.props.onClick()}\n        >\n        {this.props.value}\n      </button>\n    );\n  }\n}\n\nclass Board extends React.Component {\n// lifting state into a parent component: when components are refactored.\n// to collect data from multiple children, or two children communicate with\n// each other: declare shared state in parent component.\n// parent component can pass state back down to the children via props.\n  constructor(props) {\n    super(props);\n    this.state = {\n      squares: Array(9).fill(null),\n    };\n  }\n\n  renderSquare(i) {\n    // used prop to make board instruct each individual Square about its current value\n    // pass down a function from board to square to maintain board's state's privacy\n    return <Square\n      value={this.state.squares[i]}\n      onClick={() => this.handleClick(i)}\n    />;\n  }\n\n  render() {\n    const status = 'Next player: X';\n\n    return (\n      <div>\n        <div className=\"status\">{status}</div>\n        <div className=\"board-row\">\n          {this.renderSquare(0)}\n          {this.renderSquare(1)}\n          {this.renderSquare(2)}\n        </div>\n        <div className=\"board-row\">\n          {this.renderSquare(3)}\n          {this.renderSquare(4)}\n          {this.renderSquare(5)}\n        </div>\n        <div className=\"board-row\">\n          {this.renderSquare(6)}\n          {this.renderSquare(7)}\n          {this.renderSquare(8)}\n        </div>\n      </div>\n    );\n  }\n}\n\nclass Game extends React.Component {\n  render() {\n    return (\n      <div className=\"game\">\n        <div className=\"game-board\">\n          <Board />\n        </div>\n        <div className=\"game-info\">\n          <div>{/* status */}</div>\n          <ol>{/* TODO */}</ol>\n        </div>\n      </div>\n    );\n  }\n}\n\n// ========================================\n\nReactDOM.render(\n  <Game />,\n  document.getElementById('root')\n);\n"]},"metadata":{},"sourceType":"module"}